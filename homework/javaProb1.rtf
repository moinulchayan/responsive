{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh16520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 import java.io.*;\
class JO5_14\
\{\
  public static void main(String arg[]) throws IOException\
  \{\
  int N1=0,N2=0,GCD=0;\
  String S1,S2;\
  InputStreamReader IN = new InputStreamReader(System.in);\
  BufferedReader BR = new BufferedReader(IN);\
  System.out.println("Enter two nonnegative integers : ");\
  S1 = BR.readLine();\
  S2 = BR.readLine();\
  N1 = Integer.parseInt(S1);\
  N2 = Integer.parseInt(S2);\
  while(N2 != 0)\
  \{\
  GCD = N1 % N2;\
  N1 = N2;\
  N2 = GCD;\
  \}\
  System.out.print("The Greatest common divisor is : " + N1);\
  \}\
\}\
\
\
\
-----------------------------------------------------------------\
Q: looping Debugging\
-----------------------------------------------------------------\
1st loop:\
N1=14,N2=35\
GCD=14%35=14\
N1=N2=35\
N2=GCD=14\
\
\
2nd loop:\
N1=35,N2=14\
GCD=35%14=7\
N1=N2=14\
N2=GCD=7\
\
\
3rd loop:\
N1=14,N2=7\
GCD=14%7=0\
N1=N2=7\
N2=GCD=0\
\
4th loop:\
N1=7,N2=0\
\
\
ANS: Display N1=7\
\
\
-----------------------------------------------------------------\
Q:how does this object works\
-----------------------------------------------------------------\
Example - Getting a string from the user\
To insert a string or text to a Java program from the keyboard, we need two things. First, is an Input Stream Reader . An InputStreamReader object is responsible for obtaining a stream of bytes from the keyboard, and converting them to characters for the java program to read. \
The second object we need is a Buffered Reader. A BufferedReader object can be initialized using an InputStreamReader object within the constructor\
(or any other subclass of java.io.Reader). The job of the BufferedReader is to "Buffer" input from the underlying Reader object, for effecient use\
later (such as initialization of Strings, arrays and so on). For example, an input stream reader can only read character by character from the \
keyboard. A buffered reader can buffer an entire line of input from the stream reader, until a line has been read. After that, the readLine method\
returns the desired token of input to the program. The code below is an example of how to use an input stream reader and a buffered reader to obtain\
a line of text from the user.\
\
  import java.io.BufferedReader;\
  import java.io.IOException;\
  import java.io.InputStreamReader;\
 \
 \
  public class BufferedReaderExample \{\
      \
      public static void main(String[]args)throws IOException\{\
          \
          InputStreamReader ISR = new InputStreamReader(System.in);\
          BufferedReader BR = new BufferedReader(ISR);\
          \
          System.out.println("What's your name?");\
          String userInput = BR.readLine(); //program waits here until the user inserts a line of text\
          \
          System.out.println("Your name is : "+userInput);\
          \
          BR.close();\
          ISR.close();\
      \}\
      \
  \}\
\
------------------------------------------------------------------------------\
Q: public static void main(String[]args)throws IOException\
-------------------------------------------------------------------------------\
\
\
\
\
public class StaticDemo2\
  \{\
  public static void show() \
  \{\
    System.out.println("Hello World"); \
  \}\
  public static void main(String args[]) \
  \{\
    show(); // without object   \
    StaticDemo2 sd1 = new StaticDemo2();\
    sd1.show();      // with object\
      StaticDemo2.show(); // with class name\
        \} \}\
---------------------------------------------------------------------------------\
Q: Explain why the first " Hello World" didn't print & debug it\
----------------------------------------------------------------------------------\
}